/**
 * Wraps all messages. Useful for clients trying to determine
 * the message type.
 */
message ServiceMessage {
    oneof message {
        Ping ping = 2;
        Pong pong = 3;
        Subscribe subscribe = 4;
        Unsubscribe unsubscrive = 5;
        Get get = 6;
    }
}

/**
 * A ping request. The respondent must increment the sequence
 * number and respond with a Pong.
 */
message Ping {
    required int32 sequenceNumber = 1;
}

/**
 * Reponse to a ping request.
 */
message Pong {
    required int32 sequenceNumber = 1;
}

/**
 * Subscribe to changes on a node value.
 */
message Subscribe {

    enum EventType {
        CHANGED = 1;
    }

    required string path = 1; // The path of the firebase node
    required int32 subscriptionId = 2;  // Provided by the caller, used to help them distinguish between multiple subscription requests
    optional EventType eventType = 3 [default = CHANGED]; // The event type to look out for
    optional int32 updateThrottleInSeconds = 4 [default = 1]; // A hint from the client to reduce being spammed by updated
}

/**
 * Unsubscribe from node change events
 */
message Unsubscribe {
    required int32 subscriptionId = 1;
}

/**
 * Get the value at a node
 */
message Get {
    required string path = 1;
    required int32 requestId = 2;
}
