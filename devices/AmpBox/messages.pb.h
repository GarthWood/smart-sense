/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4 at Tue Dec  8 14:30:52 2015. */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include "pb.h"


#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Subscribe_EventType {
    Subscribe_EventType_CHANGED = 1
} Subscribe_EventType;

typedef enum _Get_ValueType {
    Get_ValueType_FLOAT = 1
} Get_ValueType;

typedef enum _Error_ErrorCode {
    Error_ErrorCode_UNKNOWN_ERROR = 1,
    Error_ErrorCode_INTERNAL_ERROR = 2,
    Error_ErrorCode_UNKNOWN_MESSAGE_TYPE = 3,
    Error_ErrorCode_INVALID_SUBSCRIPTION_EVENT_TYPE = 4
} Error_ErrorCode;

/* Struct definitions */
typedef struct _Error {
    Error_ErrorCode code;
    pb_callback_t description;
    bool has_messageId;
    int32_t messageId;
} Error;

typedef struct _Get {
    char path[64];
    bool has_valueType;
    Get_ValueType valueType;
} Get;

typedef struct _NumberValue {
    char path[64];
    int32_t value;
} NumberValue;

typedef struct _Ping {
    int32_t sequenceNumber;
} Ping;

typedef struct _Pong {
    int32_t sequenceNumber;
} Pong;

typedef struct _SetNumber {
    char path[64];
    int32_t value;
} SetNumber;

typedef struct _Subscribe {
    pb_callback_t path;
    int32_t subscriptionId;
    bool has_eventType;
    Subscribe_EventType eventType;
    bool has_updateThrottleInSeconds;
    int32_t updateThrottleInSeconds;
} Subscribe;

typedef struct _Unsubscribe {
    int32_t subscriptionId;
} Unsubscribe;

typedef struct _ServiceMessage {
    bool has_messageId;
    int32_t messageId;
    pb_size_t which_payload;
    union {
        Ping ping;
        Pong pong;
        Subscribe subscribe;
        Unsubscribe unsubscribe;
        Get get;
        Error error;
        NumberValue numberValue;
        SetNumber setNumber;
    } payload;
} ServiceMessage;

/* Default values for struct fields */
extern const Subscribe_EventType Subscribe_eventType_default;
extern const int32_t Subscribe_updateThrottleInSeconds_default;
extern const Get_ValueType Get_valueType_default;

/* Initializer values for message structs */
#define ServiceMessage_init_default              {false, 0, 0, {Ping_init_default}}
#define Ping_init_default                        {0}
#define Pong_init_default                        {0}
#define Subscribe_init_default                   {{{NULL}, NULL}, 0, false, Subscribe_EventType_CHANGED, false, 1}
#define Unsubscribe_init_default                 {0}
#define Get_init_default                         {"", false, Get_ValueType_FLOAT}
#define NumberValue_init_default                 {"", 0}
#define SetNumber_init_default                   {"", 0}
#define Error_init_default                       {(Error_ErrorCode)0, {{NULL}, NULL}, false, 0}
#define ServiceMessage_init_zero                 {false, 0, 0, {Ping_init_zero}}
#define Ping_init_zero                           {0}
#define Pong_init_zero                           {0}
#define Subscribe_init_zero                      {{{NULL}, NULL}, 0, false, (Subscribe_EventType)0, false, 0}
#define Unsubscribe_init_zero                    {0}
#define Get_init_zero                            {"", false, (Get_ValueType)0}
#define NumberValue_init_zero                    {"", 0}
#define SetNumber_init_zero                      {"", 0}
#define Error_init_zero                          {(Error_ErrorCode)0, {{NULL}, NULL}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Error_code_tag                           1
#define Error_description_tag                    2
#define Error_messageId_tag                      3
#define Get_path_tag                             1
#define Get_valueType_tag                        2
#define NumberValue_path_tag                     1
#define NumberValue_value_tag                    2
#define Ping_sequenceNumber_tag                  1
#define Pong_sequenceNumber_tag                  1
#define SetNumber_path_tag                       1
#define SetNumber_value_tag                      2
#define Subscribe_path_tag                       1
#define Subscribe_subscriptionId_tag             2
#define Subscribe_eventType_tag                  3
#define Subscribe_updateThrottleInSeconds_tag    4
#define Unsubscribe_subscriptionId_tag           1
#define ServiceMessage_ping_tag                  2

#define ServiceMessage_pong_tag                  3

#define ServiceMessage_subscribe_tag             4

#define ServiceMessage_unsubscribe_tag           5

#define ServiceMessage_get_tag                   6

#define ServiceMessage_error_tag                 7

#define ServiceMessage_numberValue_tag           8

#define ServiceMessage_setNumber_tag             9
#define ServiceMessage_messageId_tag             1

/* Struct field encoding specification for nanopb */
extern const pb_field_t ServiceMessage_fields[10];
extern const pb_field_t Ping_fields[2];
extern const pb_field_t Pong_fields[2];
extern const pb_field_t Subscribe_fields[5];
extern const pb_field_t Unsubscribe_fields[2];
extern const pb_field_t Get_fields[3];
extern const pb_field_t NumberValue_fields[3];
extern const pb_field_t SetNumber_fields[3];
extern const pb_field_t Error_fields[4];

/* Maximum encoded size of messages (where known) */
#define Ping_size                                11
#define Pong_size                                11
#define Unsubscribe_size                         11
#define Get_size                                 68
#define NumberValue_size                         77
#define SetNumber_size                           77

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
